name: go-gin-server OpenAPIClient Generate

on:
  pull_request:
    branches:
      - main
    types:
      - closed
    paths:
      - "src/v1.json"
      - ".github/workflows/generate_backend.yaml"
      - "package.json"
      - "gin/*"

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
          repository: CharVstack/CharV-backend

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'

      - name: Install oapi-codegen
        run: go install github.com/deepmap/oapi-codegen/cmd/oapi-codegen@v1

      - name: Install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest

      - run: yarn install --frozen-lockfile

      - uses: actions/checkout@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}
          repository: CharVstack/CharV-backend
          path: backend

      - name: Generate Server
        run: yarn generate:go:server:v1

      - name: Generate Models
        run: yarn generate:go:models:v1

      - name: Run format
        run: goimports -w ./backend/

      - uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ steps.generate_token.outputs.token }}
          path: backend
          commit-message: auto generated from ${{ github.event.pull_request.html_url }}
          title: ${{ github.event.pull_request.title }}
          body: ${{ github.event.pull_request.html_url }}
          branch: feature/codegen
          branch-suffix: short-commit-hash

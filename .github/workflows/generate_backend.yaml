name: go-gin-server OpenAPIClient Generate

on:
  pull_request:
    branches: 
      - main 
    types: 
      - closed

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}

    - name: Generate token
      id: generate_token
      uses: tibdex/github-app-token@v1
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.PRIVATE_KEY }}
        repository: CharVstack/CharV-backend

    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'yarn'

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.18'

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v3
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install goimports
      run: go install golang.org/x/tools/cmd/goimports@latest

    - run: yarn install --frozen-lockfile

    - uses: actions/checkout@v3
      with:
        token: ${{ steps.generate_token.outputs.token }}
        repository: CharVstack/CharV-backend
        path: backend
        
    - name: Generate
      run: yarn generate:go
    
    - uses: peter-evans/create-pull-request@v4
      with:
        token: ${{ steps.generate_token.outputs.token }}
        path: backend
        commit-message: auto generated from ${{ github.event.pull_request.html_url }}
        title: ${{ github.event.pull_request.title }}
        body: ${{ github.event.pull_request.html_url }}
        branch: feature/codegen
        branch-suffix: short-commit-hash
